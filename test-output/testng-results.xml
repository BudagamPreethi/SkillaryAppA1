<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-17T14:42:47 IST" name="Default suite" finished-at="2023-10-17T14:42:47 IST" duration-ms="131">
    <groups>
    </groups>
    <test started-at="2023-10-17T14:42:47 IST" name="Default test" finished-at="2023-10-17T14:42:47 IST" duration-ms="131">
      <class name="listeners.testclass">
        <test-method is-config="true" signature="suitConfig()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="suitConfig" finished-at="2023-10-17T14:42:47 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitConfig -->
        <test-method is-config="true" signature="testConfig()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="testConfig" finished-at="2023-10-17T14:42:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfig -->
        <test-method is-config="true" signature="classConfig()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="classConfig" finished-at="2023-10-17T14:42:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classConfig -->
        <test-method is-config="true" signature="methodConfig()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="methodConfig" finished-at="2023-10-17T14:42:47 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodConfig -->
        <test-method signature="test0()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="test0" finished-at="2023-10-17T14:42:47 IST" duration-ms="15" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at listeners.testclass.test0(testclass.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test0 -->
        <test-method is-config="true" signature="methodTearDown()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="methodTearDown" finished-at="2023-10-17T14:42:47 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="test1()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="test1" finished-at="2023-10-17T14:42:47 IST" depends-on-methods="listeners.testclass.test0" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method listeners.testclass.test1() on instance listeners.testclass@742ff096 depends on not successfully finished methods 
[listeners.testclass.test0() on instance listeners.testclass@742ff096]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method listeners.testclass.test1() on instance listeners.testclass@742ff096 depends on not successfully finished methods 
[listeners.testclass.test0() on instance listeners.testclass@742ff096]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:150)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="classTearDown()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="classTearDown" finished-at="2023-10-17T14:42:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classTearDown -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="testTearDown" finished-at="2023-10-17T14:42:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="suitTearDown()[pri:0, instance:listeners.testclass@742ff096]" started-at="2023-10-17T14:42:47 IST" name="suitTearDown" finished-at="2023-10-17T14:42:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitTearDown -->
      </class> <!-- listeners.testclass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
